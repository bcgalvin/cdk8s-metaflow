apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/version: 2.2.4
    helm.sh/chart: metaflow-service-0.2.0
  name: release-name-metaflow-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/version: 2.2.4
    helm.sh/chart: metaflow-service-0.2.0
  name: release-name-metaflow-service
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: integ-metaflow-se-metaflow-service-metaflow-deployment-c80a27fe
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: integ-metaflow-se-metaflow-service-metaflow-deployment-c80a27fe
    spec:
      automountServiceAccountToken: true
      containers:
        - command:
            - /opt/latest/bin/python3
            - -m
            - services.metadata_service.server
          env:
            - name: MF_METADATA_DB_NAME
              value: metaflow
            - name: MF_METADATA_DB_USER
              value: metaflow
            - name: MF_METADATA_DB_PSWD
              value: metaflow
            - name: MF_METADATA_DB_PORT
              value: "5432"
            - name: MF_METADATA_DB_HOST
              value: release-name-postgresql
          image: public.ecr.aws/outerbounds/metaflow_metadata_service:2.2.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 8080
          name: metaflow-service
          ports:
            - containerPort: 8080
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 8080
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - /opt/latest/bin/python3
            - /root/run_goose.py
            - --only-if-empty-db
          env:
            - name: MF_METADATA_DB_NAME
              value: metaflow
            - name: MF_METADATA_DB_USER
              value: metaflow
            - name: MF_METADATA_DB_PSWD
              value: metaflow
            - name: MF_METADATA_DB_PORT
              value: "5432"
            - name: MF_METADATA_DB_HOST
              value: release-name-postgresql
          image: public.ecr.aws/outerbounds/metaflow_metadata_service:2.2.4
          imagePullPolicy: Always
          name: db-migrations
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: false
      serviceAccountName: release-name-metaflow-service
      setHostnameAsFQDN: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/version: 2.2.4
    helm.sh/chart: metaflow-service-0.2.0
  name: release-name-metaflow-service
spec:
  externalIPs: []
  ports:
    - name: metadata
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: upgrades
      port: 8082
      protocol: TCP
      targetPort: 8082
  selector: {}
  type: ClusterIP
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/version: 2.2.4
    cdk8s.io/metadata.addr: integ-metaflow-s-metaflow-service-metaflow-service-pod-c8399912
    helm.sh/chart: metaflow-service-0.2.0
  name: release-name-metaflow-service-test-connection
spec:
  automountServiceAccountToken: true
  containers:
    - args:
        - release-name-metaflow-service:8080
      command:
        - wget
      image: busybox
      imagePullPolicy: Always
      name: wget
      securityContext:
        privileged: false
        readOnlyRootFilesystem: false
        runAsNonRoot: false
  dnsPolicy: ClusterFirst
  restartPolicy: OnFailure
  securityContext:
    fsGroupChangePolicy: Always
    runAsNonRoot: false
  setHostnameAsFQDN: false
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: release-name-postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.21
  name: release-name-postgresql
  namespace: default
data:
  password: bWV0YWZsb3c=
  postgres-password: NXJPVjY2NERaRQ==
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: release-name-postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.21
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: release-name-postgresql-hl
  namespace: default
spec:
  clusterIP: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: release-name-postgresql
    app.kubernetes.io/name: postgresql
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: release-name-postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.21
  name: release-name-postgresql
  namespace: default
spec:
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: release-name-postgresql
    app.kubernetes.io/name: postgresql
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: release-name-postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.21
  name: release-name-postgresql
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: release-name-postgresql
      app.kubernetes.io/name: postgresql
  serviceName: release-name-postgresql-hl
  template:
    metadata:
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: release-name-postgresql
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-11.6.21
      name: release-name-postgresql
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: primary
                    app.kubernetes.io/instance: release-name-postgresql
                    app.kubernetes.io/name: postgresql
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_USER
              value: metaflow
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgres-password
                  name: release-name-postgresql
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: release-name-postgresql
            - name: POSTGRES_DB
              value: metaflow
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          image: docker.io/bitnami/postgresql:14.4.0-debian-11-r19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "metaflow" -d "dbname=metaflow" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: postgresql
          ports:
            - containerPort: 5432
              name: tcp-postgresql
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "metaflow" -d "dbname=metaflow" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /bitnami/postgresql
              name: data
      hostIPC: false
      hostNetwork: false
      securityContext:
        fsGroup: 1001
      serviceAccountName: release-name-metaflow-service
      volumes:
        - emptyDir:
            medium: Memory
          name: dshm
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/version: 2.2.4
    helm.sh/chart: metaflow-service-0.2.0
  name: release-name-metaflow-service
spec:
  rules:
    - host: metaflow-service.local
      http:
        paths:
          - backend:
              service:
                name: release-name-metaflow-service
                port:
                  number: 8080
            path: /
            pathType: ImplementationSpecific
