apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: release-name-metaflow-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: metaflow-service-0.1.5
  name: release-name-metaflow-service
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: release-name-metaflow-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: metaflow-service-0.1.5
  name: release-name-metaflow-service
  namespace: default
spec:
  ports:
    - name: metadata
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: upgrades
      port: 8082
      protocol: TCP
      targetPort: 8082
  selector:
    app.kubernetes.io/instance: release-name-metaflow-service
    app.kubernetes.io/name: metaflow-service
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: release-name-metaflow-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: metaflow-service-0.1.5
  name: release-name-metaflow-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name-metaflow-service
      app.kubernetes.io/name: metaflow-service
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name-metaflow-service
        app.kubernetes.io/name: metaflow-service
    spec:
      containers:
        - command:
            - /opt/latest/bin/python3
            - -m
            - services.metadata_service.server
          env:
            - name: MF_METADATA_DB_NAME
              value: "metaflow"
            - name: MF_METADATA_DB_PORT
              value: "5432"
            - name: MF_METADATA_DB_PSWD
              value: "metaflow"
            - name: MF_METADATA_DB_USER
              value: "metaflow"
            - name: MF_METADATA_DB_HOST
              value: "192.168.65.2"
          image: public.ecr.aws/outerbounds/metaflow_metadata_service:v2.3.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          name: metaflow-service
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources: {}
          securityContext: {}
      initContainers:
        - command:
            - /opt/latest/bin/python3
            - /root/run_goose.py
            - --only-if-empty-db
          env:
            - name: MF_METADATA_DB_NAME
              value: "metaflow"
            - name: MF_METADATA_DB_PORT
              value: "5432"
            - name: MF_METADATA_DB_PSWD
              value: "metaflow"
            - name: MF_METADATA_DB_USER
              value: "metaflow"
            - name: MF_METADATA_DB_HOST
              value: "192.168.65.2"
          image: public.ecr.aws/outerbounds/metaflow_metadata_service:v2.3.0
          name: db-migrations
      securityContext: {}
      serviceAccountName: release-name-metaflow-service
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: release-name-metaflow-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: metaflow-service-0.1.5
  name: release-name-metaflow-service-test-connection
  namespace: default
spec:
  containers:
    - args:
        - release-name-metaflow-service:8080
      command:
        - wget
      image: busybox
      name: release-name-metaflow-service-test-connection
  restartPolicy: Never
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: postgresql
  name: release-name-postgresql
spec:
  clusterIP: None
  ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: postgresql
---
apiVersion: v1
kind: Endpoints
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: postgresql
  name: release-name-postgresql
subsets:
  - addresses:
      - ip: 192.168.65.2
    ports:
      - name: postgresql
        port: 5432
        protocol: TCP
