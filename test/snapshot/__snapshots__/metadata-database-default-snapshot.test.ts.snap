// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`metadata database default snapshot 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "data": Object {
      "postgresql-password": "Wk9LajN1NklUWA==",
    },
    "kind": "Secret",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/instance": "release-name-postgresql",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.16.2",
      },
      "name": "release-name-postgresql",
      "namespace": "default",
    },
    "type": "Opaque",
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/instance": "release-name-postgresql",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.16.2",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true",
      },
      "name": "release-name-postgresql-headless",
      "namespace": "default",
    },
    "spec": Object {
      "clusterIP": "None",
      "ports": Array [
        Object {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql",
        },
      ],
      "publishNotReadyAddresses": true,
      "selector": Object {
        "app.kubernetes.io/instance": "release-name-postgresql",
        "app.kubernetes.io/name": "postgresql",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/instance": "release-name-postgresql",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.16.2",
      },
      "name": "release-name-postgresql",
      "namespace": "default",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/instance": "release-name-postgresql",
        "app.kubernetes.io/name": "postgresql",
        "role": "primary",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "primary",
        "app.kubernetes.io/instance": "release-name-postgresql",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.16.2",
      },
      "name": "release-name-postgresql-postgresql",
      "namespace": "default",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/instance": "release-name-postgresql",
          "app.kubernetes.io/name": "postgresql",
          "role": "primary",
        },
      },
      "serviceName": "release-name-postgresql-headless",
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/component": "primary",
            "app.kubernetes.io/instance": "release-name-postgresql",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "postgresql",
            "helm.sh/chart": "postgresql-10.16.2",
            "role": "primary",
          },
          "name": "release-name-postgresql",
        },
        "spec": Object {
          "affinity": Object {
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "podAffinityTerm": Object {
                    "labelSelector": Object {
                      "matchLabels": Object {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "release-name-postgresql",
                        "app.kubernetes.io/name": "postgresql",
                      },
                    },
                    "namespaces": Array [
                      "default",
                    ],
                    "topologyKey": "kubernetes.io/hostname",
                  },
                  "weight": 1,
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "env": Array [
                Object {
                  "name": "BITNAMI_DEBUG",
                  "value": "false",
                },
                Object {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432",
                },
                Object {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql",
                },
                Object {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data",
                },
                Object {
                  "name": "POSTGRES_USER",
                  "value": "postgres",
                },
                Object {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": Object {
                    "secretKeyRef": Object {
                      "key": "postgresql-password",
                      "name": "release-name-postgresql",
                    },
                  },
                },
                Object {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no",
                },
                Object {
                  "name": "POSTGRESQL_ENABLE_TLS",
                  "value": "no",
                },
                Object {
                  "name": "POSTGRESQL_LOG_HOSTNAME",
                  "value": "false",
                },
                Object {
                  "name": "POSTGRESQL_LOG_CONNECTIONS",
                  "value": "false",
                },
                Object {
                  "name": "POSTGRESQL_LOG_DISCONNECTIONS",
                  "value": "false",
                },
                Object {
                  "name": "POSTGRESQL_PGAUDIT_LOG_CATALOG",
                  "value": "off",
                },
                Object {
                  "name": "POSTGRESQL_CLIENT_MIN_MESSAGES",
                  "value": "error",
                },
                Object {
                  "name": "POSTGRESQL_SHARED_PRELOAD_LIBRARIES",
                  "value": "pgaudit",
                },
              ],
              "image": "docker.io/bitnami/postgresql:11.14.0-debian-10-r28",
              "imagePullPolicy": "IfNotPresent",
              "livenessProbe": Object {
                "exec": Object {
                  "command": Array [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \\"postgres\\" -h 127.0.0.1 -p 5432",
                  ],
                },
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
              },
              "name": "release-name-postgresql",
              "ports": Array [
                Object {
                  "containerPort": 5432,
                  "name": "tcp-postgresql",
                },
              ],
              "readinessProbe": Object {
                "exec": Object {
                  "command": Array [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "exec pg_isready -U \\"postgres\\" -h 127.0.0.1 -p 5432
[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
",
                  ],
                },
                "failureThreshold": 6,
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
              },
              "resources": Object {
                "requests": Object {
                  "cpu": "250m",
                  "memory": "256Mi",
                },
              },
              "securityContext": Object {
                "runAsUser": 1001,
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/dev/shm",
                  "name": "dshm",
                },
                Object {
                  "mountPath": "/bitnami/postgresql",
                  "name": "data",
                },
              ],
            },
          ],
          "securityContext": Object {
            "fsGroup": 1001,
          },
          "volumes": Array [
            Object {
              "emptyDir": Object {
                "medium": "Memory",
              },
              "name": "dshm",
            },
          ],
        },
      },
      "updateStrategy": Object {
        "type": "RollingUpdate",
      },
      "volumeClaimTemplates": Array [
        Object {
          "metadata": Object {
            "name": "data",
          },
          "spec": Object {
            "accessModes": Array [
              "ReadWriteOnce",
            ],
            "resources": Object {
              "requests": Object {
                "storage": "8Gi",
              },
            },
          },
        },
      ],
    },
  },
]
`;
