---
# Source: metaflow-service/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-metaflow-service
  labels:
    helm.sh/chart: metaflow-service-0.2.0
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.2.4"
    app.kubernetes.io/managed-by: Helm
---
# Source: metaflow-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-metaflow-service
  labels:
    helm.sh/chart: metaflow-service-0.2.0
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.2.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: metadata
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: upgrades
      port: 8082
      protocol: TCP
      targetPort: 8082
  selector:
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/instance: release-name
---
# Source: metaflow-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-metaflow-service
  labels:
    helm.sh/chart: metaflow-service-0.2.0
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.2.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: metaflow-service
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metaflow-service
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-metaflow-service
      securityContext:
        {}
      initContainers:
        - name: db-migrations
          image: "public.ecr.aws/outerbounds/metaflow_metadata_service:2.2.4"
          command:
          - "/opt/latest/bin/python3"
          - "/root/run_goose.py"
          - "--only-if-empty-db"
          env:
            - name: MF_METADATA_DB_NAME
              value: 
            - name: MF_METADATA_DB_PORT
              value: "5432"
            - name: MF_METADATA_DB_PSWD
              value: ""
            - name: MF_METADATA_DB_USER
              value: ""
            - name: MF_METADATA_DB_HOST
              value: release-name-postgresql
      containers:
        - name: metaflow-service
          securityContext:
            {}
          image: "public.ecr.aws/outerbounds/metaflow_metadata_service:2.2.4"
          command: ["/opt/latest/bin/python3", "-m", "services.metadata_service.server" ]
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
            {}
          env:
            - name: MF_METADATA_DB_NAME
              value: 
            - name: MF_METADATA_DB_PORT
              value: "5432"
            - name: MF_METADATA_DB_PSWD
              value: ""
            - name: MF_METADATA_DB_USER
              value: ""
            - name: MF_METADATA_DB_HOST
              value: release-name-postgresql
---
# Source: metaflow-service/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-metaflow-service-test-connection"
  labels:
    helm.sh/chart: metaflow-service-0.2.0
    app.kubernetes.io/name: metaflow-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.2.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-metaflow-service:8080']
  restartPolicy: Never
